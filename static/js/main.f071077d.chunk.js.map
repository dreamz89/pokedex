{"version":3,"sources":["pokemon-logo.svg","details/Styles.js","details/Details.tsx","app/Styles.js","app/App.tsx","reportWebVitals.js","index.js"],"names":["ModalHeader","styled","Modal","Header","Top","div","Image","img","Types","Type","Title","h6","List","ListMoves","RowStat","Row","ColLabel","Col","ColBar","Bar","props","width","Evolution","EvolutionTitle","Stage","EvolutionImage","Name","p","Details","singlePokemonData","active","activeEvolutionChain","handleActive","handleClose","centered","show","onHide","dialogClassName","closeButton","Body","src","sprites","other","dream_world","front_default","alt","order","toLocaleString","undefined","minimumIntegerDigits","useGrouping","name","types","map","kind","type","xs","abilities","obj","ability","stats","md","stat","base_stat","moves","move","stage","onClick","id","image","GlobalStyle","createGlobalStyle","Screen","header","HeaderLogo","Filter","Card","h5","App","useState","data","setData","filteredData","setFilteredData","evolutionData","setEvolutionData","setActive","setActiveEvolutionChain","filter","setFilter","useEffect","fetch","then","response","json","listOfPokemon","Promise","all","results","pokemon","url","singlePokemon","values","catch","error","console","log","message","urls","evo","singleEvolutionData","evolutionChains","forEach","chain","group","recursion","idNum","species","slice","replaceAll","push","find","evolves_to","logo","Container","fluid","Form","onSubmit","e","preventDefault","test","includes","InputGroup","className","FormControl","placeholder","aria-label","onChange","target","value","Append","Button","lg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f071077d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon-logo.0d557d6f.svg\";","import styled from 'styled-components'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const ModalHeader = styled(Modal.Header)`\n  border-bottom: unset;\n  padding: 15px 15px 0 0;\n`\n\nexport const Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const Image = styled.img`\n  margin-bottom: 20px;\n  max-width: 200px;\n`\n\nexport const Types = styled.div`\n  display: flex;\n`\n\nexport const Type = styled.img`\n  margin: 0 5px 20px 5px;\n  height: 30px;\n  width: 30px;\n`\n\nexport const Title = styled.h6`\n  border-left: 3px solid #2b72b9;\n  padding-left: 10px;\n`\n\nexport const List = styled.div`\n  margin-bottom: 15px;\n  padding-left: 13px;\n`\n\nexport const ListMoves = styled(List)`\n  columns: 3 auto;\n`\n\nexport const RowStat = styled(Row)`\n  flex-wrap: nowrap;\n`\n\nexport const ColLabel = styled(Col)`\n  text-align: right;\n`\n\nexport const ColBar = styled(Col)`\n  display: flex;\n  align-items: center;\n  padding-left: 0;\n`\n\nexport const Bar = styled.div`\n  background-color: #29465b;\n  margin-right: 10px;\n  height: 16px;\n  width: ${props => props.width}px\n`\n\nexport const Evolution = styled.div`\n  background-color: #29465b;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  padding: 15px 28px;\n\n  > div:last-of-type {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n  }\n`\n\nexport const EvolutionTitle = styled.h6`\n  color: white;\n  margin-bottom: 15px;\n`\n\nexport const Stage = styled.div`\n  cursor: pointer;\n  text-align: center;\n`\n\nexport const EvolutionImage = styled.img`\n  margin-bottom: 10px;\n  max-width: 80px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nexport const Name = styled.p`\n  color: white;\n  margin: 0;\n`","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { ModalHeader, Top, Image, Types, Type, Title, List, ListMoves, RowStat, ColLabel, ColBar, Bar, Evolution, EvolutionTitle, Stage, EvolutionImage, Name } from './Styles'\nimport { Props } from './Types'\n\nfunction Details({ \n  singlePokemonData, \n  active, \n  activeEvolutionChain, \n  handleActive,\n  handleClose\n}: Props) {\n  return (\n    <>\n      <Modal \n        centered \n        show={active !== null} \n        onHide={handleClose}\n        dialogClassName=\"modal-80w\"\n      >\n        <ModalHeader closeButton />\n        <Modal.Body>\n          <Top>\n            <Image src={singlePokemonData?.sprites.other.dream_world.front_default} alt=\"\" />\n            <h5>#{singlePokemonData?.order.toLocaleString(undefined, {minimumIntegerDigits: 3, useGrouping:false})}</h5>\n            <h5>{singlePokemonData?.name}</h5>\n            <Types>\n              {singlePokemonData?.types.map(kind => (\n                <Type \n                  src={`/types/${kind.type.name}.svg`} \n                  alt={kind.type.name} \n                  key={kind.type.name}\n                />\n              ))}\n            </Types>\n          </Top>\n          <div>\n            <Row>\n              <Col xs={3}>\n                <Title>Abilities</Title>\n                <List>\n                  {singlePokemonData?.abilities.map(obj => \n                    <p key={obj.ability.name}>{obj.ability.name}</p>\n                  )}\n                </List>\n              </Col>\n              <Col xs={9}>\n                <Title>Stats</Title>\n                <List>\n                  {singlePokemonData?.stats.map(obj => \n                    <RowStat>\n                      <ColLabel md={5}>\n                        <p key={obj.stat.name}>{obj.stat.name}</p>\n                      </ColLabel>\n                      <ColBar md={7}>\n                        <Bar width={obj.base_stat}></Bar>\n                        <p>{obj.base_stat}</p>\n                      </ColBar>\n                    </RowStat>\n                  )}\n                </List>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12}>\n                <Title>Moves</Title>\n                <ListMoves>\n                  {singlePokemonData?.moves.map(obj => \n                    <p key={obj.move.name}>{obj.move.name}</p>\n                  )}\n                </ListMoves>\n              </Col>\n            </Row>\n          </div>\n          <Evolution>\n            <div>\n              <EvolutionTitle>Evolution</EvolutionTitle>\n            </div>\n            <div>\n              {activeEvolutionChain.map(stage => (\n                <Stage onClick={() => handleActive(stage.id)}>\n                  <EvolutionImage src={stage.image} alt=\"\" />\n                  <Name>{stage.name}</Name>\n                </Stage>\n              ))}\n            </div>\n          </Evolution>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default Details\n\n\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    box-sizing: border-box;\n    font-family: 'Open Sans', sans-serif;\n  }\n\n  h5, h6 {\n    font-weight: 700;\n  }\n\n  p {\n    margin: 0;\n  }\n`\n\nexport const Screen = styled.div`\n  background-color: #29465b;\n  min-height: 100vh;\n`\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: center;\n`\n\nexport const HeaderLogo = styled.img`\n  margin: 20px 0;\n  max-width: 400px;\n`\n\nexport const Filter = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n\n  > div {\n    max-width: 400px;\n\n    button {\n      background-color: #2b72b9;\n      border-color: #2b72b9;\n    }\n  }\n`\n\nexport const Card = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  margin: 20px;\n  padding: 15px;\n  position: relative;\n  transition: transform 100ms ease-out;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.75) 0px 3px 10px;\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n`\n\nexport const Image = styled.img`\n  height: 200px;\n  margin-bottom: 20px;\n  width: 100%;\n`\n\nexport const Name = styled.h5`\n  text-align: center;\n`","import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\nimport logo from '../pokemon-logo.svg'\nimport Details from '../details/Details'\nimport { GlobalStyle, Screen, Header, HeaderLogo, Filter, Card, Image, Name } from './Styles'\nimport { PokemonListAPI, PokemonUrl, SinglePokemonData, EvolutionChainAPI, EvolutionStageAPI, SingleEvolutionData, EvolutionStage } from './Types'\n\nfunction App() {\n  const [data, setData] = useState([] as SinglePokemonData[])\n  const [filteredData, setFilteredData] = useState([] as SinglePokemonData[])\n  const [evolutionData, setEvolutionData] = useState([] as SingleEvolutionData[])\n  const [active, setActive] = useState(null as null | number)\n  const [activeEvolutionChain, setActiveEvolutionChain] = useState([] as EvolutionStage[])\n  const [filter, setFilter] = useState('')\n\n  const handleClose = () => setActive(null)\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    setFilter(e.target.value)\n  }\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    const test = data?.filter(({ name }) => name.includes(filter))\n    setFilteredData(test)\n  }\n\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=40')\n      .then(response => response.json())\n      .then((listOfPokemon: PokemonListAPI) => {\n        Promise.all(listOfPokemon.results.map((pokemon: PokemonUrl) => \n          fetch(pokemon.url)\n            .then(response => response.json())\n            .then(singlePokemon => singlePokemon)\n        ))\n          .then((values: SinglePokemonData[]) => {\n            setData(values)\n            setFilteredData(values)\n          })\n      })\n      .catch(error => console.log(error.message))\n    \n    fetch('https://pokeapi.co/api/v2/evolution-chain/?limit=16')\n      .then(response => response.json())\n      .then((urls: EvolutionChainAPI) => {\n        Promise.all(urls.results.map(evo => \n          fetch(evo.url)\n            .then(response => response.json())\n            .then(singleEvolutionData => singleEvolutionData)\n        ))\n          .then((values: SingleEvolutionData[]) => setEvolutionData(values))\n      })\n      .catch(error => console.log(error.message))\n  }, [])\n\n  // Format evolution chain data structure\n  let evolutionChains = [] as EvolutionStage[][]\n  evolutionData.forEach(chain => {\n    let group = [] as EvolutionStage[]\n    const recursion = (obj: EvolutionStageAPI) => {\n      const idNum = +obj.species.url.slice(-4).replaceAll(/[s/]/g, '')\n      group.push({\n        name: obj.species.name,\n        id: idNum,\n        image: data?.find(({ id }) => id === idNum)?.sprites.other.dream_world.front_default\n      })\n      if (!obj.evolves_to[0]) return\n      recursion(obj.evolves_to[0])\n    }\n    recursion(chain.chain)\n    evolutionChains.push(group)\n  })\n\n  // Update activeEvolutionChain every time pokemon is clicked\n  useEffect(() => {\n    evolutionChains.forEach((chain: EvolutionStage[]) => {\n      if (chain.find(({ id }) => id === active)) setActiveEvolutionChain(chain)\n    })\n  }, [active]) // eslint-disable-line\n\n  // reset every time filter is empty\n  useEffect(() => {\n    if (filter === '') setFilteredData(data)\n  }, [filter]) // eslint-disable-line\n\n  return (\n    <Screen>\n      <GlobalStyle />\n      <Header>\n        <HeaderLogo src={logo} alt=\"logo\" />\n      </Header>\n      <div>\n        <Container fluid=\"md\">\n          <Filter>\n            <Form onSubmit={handleSubmit}>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Search by name\"\n                  aria-label=\"Search by name\"\n                  onChange={handleChange}\n                />\n                <InputGroup.Append>\n                  <Button type=\"submit\">Submit</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form>\n          </Filter>\n          <Row>\n          {filteredData.map(pokemon => (\n            <Col xs={6} md={4} lg={3} key={pokemon.id}>\n              <Card onClick={() => setActive(pokemon.id)}>\n                <Image src={pokemon.sprites.other.dream_world.front_default} alt=\"\" />\n                <Name>{pokemon.name}</Name>\n              </Card>\n            </Col>\n          ))}\n          </Row>\n        </Container>\n      </div>\n      <Details\n        singlePokemonData={active !== null ? data[active - 1] : null} \n        active={active} \n        activeEvolutionChain={activeEvolutionChain}\n        handleActive={setActive}\n        handleClose={handleClose}\n      />\n    </Screen>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}